@startuml Verify Account (POST)

header Massage Reservation Sequence Diagram
footer Page %page% of %lastpage%
title "Verify Account (POST)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:account" as routerAccount
participant "<<controllers>>\n:account" as controllersAccount
participant "<<model>>\n:User" as modelUser
participant "<<model>>\n:Otp" as modelOtp
database "<<MongoDB>>\n:otps" as OtpDatabase
database "<<MongoDB>>\n:users" as UsersDatabase

client->server ++:req.post('/account/verifyAccount')
server->routerAccount ++:app.use('/account',account))
routerAccount->controllersAccount ++:verifyAccount()
controllersAccount->modelOtp ++:findOne(email,otp)
modelOtp->OtpDatabase ++:findOne({email,otp})
OtpDatabase-->modelOtp --:existedOtp
modelOtp --> controllersAccount --:existedOtp
controllersAccount->modelUser ++:findOneAndUpdate(email, {isVerified:true})
modelUser->UsersDatabase ++:findOneAndUpdate({email},{isVerified:true})
UsersDatabase-->modelUser --:updatedUser
modelUser --> controllersAccount --:updatedUser
controllersAccount -> modelOtp ++:deleteOne(email)
modelOtp -> OtpDatabase ++:deleteOne(email)
modelOtp <-- OtpDatabase --:{ }
controllersAccount <-- modelOtp --:{ }
client <- controllersAccount --:response


@enduml
